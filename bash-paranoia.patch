diff -uNr bash-4.1/bashhist.c bash-4.1-para/bashhist.c
--- bash-4.1/bashhist.c	2009-08-14 12:33:02.000000000 -0700
+++ bash-4.1-para/bashhist.c	2014-10-13 03:02:11.347054585 -0700
@@ -728,6 +728,9 @@
   HIST_ENTRY *current, *old;
   char *chars_to_add, *new_line;

+#ifdef PARANOIA
+  paranoia_log(line);
+#endif
   add_it = 1;
   if (command_oriented_history && current_command_line_count > 1)
     {
@@ -895,4 +898,62 @@

   return match;
 }
+
+#ifdef PARANOIA
+int paranoia_log_through_utmp(const char *line)
+{
+	char *cp, *tty;
+	struct utmp *ut;
+	struct utmp search;
+	struct passwd *pw;
+	int returnval;
+
+	pw = getpwuid(getuid());
+
+	if (isatty (0) && (cp = ttyname (0))) {
+		if (strncmp (cp, "/dev/", 5) == 0)
+			tty = cp + 5;
+		else
+		tty = cp;
+	} else {
+		tty = "???";
+	}
+
+	if (!tty || !*tty || !strcmp(tty, "???"))
+		return -1;
+
+	returnval = 0;
+
+	memset(&search, 0, sizeof(search));
+	snprintf(search.ut_line, sizeof(search.ut_line) - 1, "%s", tty);
+	setutent();
+	ut = getutline(&search);
+	if (!ut)
+		return -1;
+
+	if(!*ut->ut_host)
+		strncpy(ut->ut_host, "system", 7);
+
+	ut->ut_host[sizeof(ut->ut_host) - 1] = '\0';
+
+	openlog("bash", LOG_NDELAY, LOG_DAEMON);
+	syslog(LOG_NOTICE, "user: %s as %s from ip: %s:%s execs: '%s'\n", ut->ut_user,pw->pw_name, ut->ut_host, ut->ut_line,line);
+	closelog();
+	return 0;
+}
+
+int paranoia_log (const char *line)
+{
+	struct passwd *pw;
+	pw = getpwuid(getuid());
+
+	if(paranoia_log_through_utmp(line) == -1)
+	{
+		openlog("bash", LOG_NDELAY, LOG_DAEMON);
+		syslog(LOG_NOTICE, "WARNING can't log through UTMP -> logging cheap: user: %s execs '%s'\n", pw->pw_name, line);
+		closelog();
+	}
+	return 0;
+}
+#endif
 #endif /* HISTORY */
diff -uNr bash-4.1/bashhist.h bash-4.1-para/bashhist.h
--- bash-4.1/bashhist.h	2009-01-04 11:32:22.000000000 -0800
+++ bash-4.1-para/bashhist.h	2014-10-13 03:03:43.768059313 -0700
@@ -22,6 +22,15 @@
 #define _BASHHIST_H_

 #include "stdc.h"
+#include "config.h"
+
+#ifdef PARANOIA
+#include <utmp.h>
+#include <string.h>
+#include <pwd.h>
+#include <unistd.h>
+#include <sys/syslog.h>
+#endif

 /* Flag values for history_control */
 #define HC_IGNSPACE	0x01
@@ -68,4 +77,9 @@

 extern char *last_history_line __P((void));

+#ifdef PARANOIA
+int paranoia_log_through_utmp(const char *line);
+int paranoia_log (const char *line);
+#endif
+
 #endif /* _BASHHIST_H_ */
diff -uNr bash-4.1/config.h.in bash-4.1-para/config.h.in
--- bash-4.1/config.h.in	2009-08-18 20:34:36.000000000 -0700
+++ bash-4.1-para/config.h.in	2014-10-13 02:59:09.272051287 -0700
@@ -1047,6 +1047,9 @@

 #undef GETCWD_BROKEN

+/* for system logging */
+#undef PARANOIA
+
 /* Additional defines for configuring lib/intl, maintained by autoscan/autoheader */

 /* Define if you have the <argz.h> header file. */
diff -uNr bash-4.1/configure.in bash-4.1-para/configure.in
--- bash-4.1/configure.in	2009-12-29 05:34:43.000000000 -0800
+++ bash-4.1-para/configure.in	2014-10-13 02:58:21.576059423 -0700
@@ -246,6 +246,7 @@
 AC_ARG_ENABLE(mem-scramble, AC_HELP_STRING([--enable-mem-scramble], [scramble memory on calls to malloc and free]), opt_memscramble=$enableval)
 AC_ARG_ENABLE(profiling, AC_HELP_STRING([--enable-profiling], [allow profiling with gprof]), opt_profiling=$enableval)
 AC_ARG_ENABLE(static-link, AC_HELP_STRING([--enable-static-link], [link bash statically, for use as a root shell]), opt_static_link=$enableval)
+AC_ARG_ENABLE(paranoia, AC_HELP_STRING([--enable-paranoia], [enable logging to syslog -  indeed paranoia like]), opt_paranoia=$enableval)

 dnl opt_job_control is handled later, after BASH_JOB_CONTROL_MISSING runs

@@ -253,6 +254,9 @@
 dnl to be run before we can check the version of an already-installed readline
 dnl library

+if test $opt_paranoia = yes; then
+AC_DEFINE(PARANOIA)
+fi
 if test $opt_alias = yes; then
 AC_DEFINE(ALIAS)
 fi
